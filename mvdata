#!/usr/bin/env bash

# A simple rsync wrapper for moving data across machines
# Author: Sanghyuk Moon
# Date: July 2019

# function to print help message and exit
usage() { 
  cat <<EOM
  -------------------------------------------------------------------
  Usage: mvdata [-r] [-e] [-t] SRC DST
  -------------------------------------------------------------------
  Options:
  -r Remove source files (turn on rsync --remove-source-files option)
  -e Transfer vtk files only, excluding everything else
  -t Review command before execution
  -------------------------------------------------------------------
  Examples:
  1. transfer a whole directory "machine:/path/to/dir" to "/path/to/local/dir" and remove source files
     \$ mvdata -r machine:/path/to/dir /path/to/local
  2. copy all files under "machine:/path/to/dir" into /path/to/local/dir
     \$ mvdata machine:/path/to/dir/ /path/to/local/dir/
  * WARNING: Trailing slash in SRC changes the behavior;
  * Note   : you may need to add machine in .ssh/config file
             For using trailing slash in DST, see this article
             https://unix.stackexchange.com/questions/402555/why-add-a-trailing-slash-after-an-rsync-destination
  -------------------------------------------------------------------
EOM
  exit 1 
}

if (( $# == 0 )); then
  usage
  exit 1
fi

RSYNC="rsync --archive --progress --partial-dir=.rsync-partial"

# parse options and arguments using getopts 
while getopts :hret opt; do
  case $opt in
    h) usage;;
    r) RSYNC="$RSYNC --remove-source-files";;
    e) RSYNC="$RSYNC --include=*/ --include=*.vtk --exclude=*";;
    t) RSYNC="$RSYNC --dry-run";;
    \?) usage;;
  esac
done
shift "$((OPTIND-1))"
SRC=$1
DST=$2

$RSYNC $SRC $DST
